FROM python:3

EXPOSE 443

ARG domain
ARG camera

ENV CAMERA=$camera DOMAIN=$domain OPENCV_VERSION=4.0.1

RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y build-essential cmake unzip pkg-config \
    libjpeg-dev libpng-dev libtiff-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libgtk-3-dev libatlas-base-dev gfortran

COPY requirements-usb.txt ./
RUN pip install --no-cache-dir -r requirements-usb.txt

WORKDIR /opt

RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \
  wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \
  unzip opencv.zip && unzip opencv_contrib.zip && rm -rf opencv*.zip

WORKDIR /opt/opencv-${OPENCV_VERSION}/build

RUN cmake \
  -D CMAKE_BUILD_TYPE=RELEASE \
  -D CMAKE_INSTALL_PREFIX=/usr/local \
  -D OPENCV_ENABLE_NONFREE=ON \
  -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
  -D PYTHON_EXECUTABLE=$(which python3) \
  .. && make -j12 && make install
RUN ldconfig

WORKDIR /usr/src/app

COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD python3 -u main.py --port 443 --camera $CAMERA --domain $DOMAIN